# gitignore忽视规则
# ?1.bin   表示忽略所有的（某一个字符）1.bin的文件或目录，忽略 a1.bin，11.bin，x1.bin ，不忽略aa1.bin，111.bin，xx1.bin
# [1-9].c  表示忽略 1至9.c, 不忽略1.cpp , 99.c
# [1-9].c  表示忽略 1至9.(任何).c, 忽略1.ac , 9.c, 6.ac, 不忽略 100.ac , 1.cpp
# .[oa]    表示忽略 file.o，file.a ，不忽略 file.cpp
# !a.bin   表示但a.bin除外
# /a       表示仅仅忽略项目根目录下（和.git 位于 同一级目录下 ）的 a 文件或目录，不包括 child/a
# b/       表示忽略 b/目录下的所有文件，忽略整个b文件夹
# c/.txt   表示会忽略c/a.txt但不包括 c/d/e.txt
# d/       表示，忽略当前路径下的d文件夹（目录），该文件夹下的所有内容都会被忽略，不忽略d 文件（非目录）
# /bin     表示忽略项目根目录下的bin文件
# fd/      表示忽略目录 fd下的全部内容，项目根目录下的 /fd1/ 目录 和 子目录 /child/fd/ 目录，都会被忽略
# /fd1/    表示忽略项目根目录下的 /fd1/ 目录的全部内容，不忽略/fd1, /a/fd1, /b/e/fd1/v
# /a/b/*   表示忽略项目根目录下的 /a/b/ 目录的全部内容，不忽略/a/c, /x/a/b
# /.c      表示忽略1.c，不忽略 child/2.c
# e/.cpp   表示忽略e/123.cpp，不忽略 a/b/234.cpp和1/2/4.cpp
# /f       表示忽略/f,a/f,a/b/f等
# a//b     表示忽略a/b, a/asdf/b, a/q/w/b等
# !/k/m.sh 表示不忽略k目录下的m.sh文件
# *.txt    表示忽略所有 .txt 文件或目录
# m.out    表示忽略当前项目根目录里面的 m.out文件和目录

/node_modules